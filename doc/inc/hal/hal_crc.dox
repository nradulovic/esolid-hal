/*********************************************************************************************//**
 * @file
 * @addtogroup  hal_crc
 ****************************************************************************************//** @{ */
/**
@section        crc_usage Koriscenje CRC modula

Funkcije rade nad jednim blokom podataka proizvoljne velicine, a rezultat obrade 
je CRC kod za taj blok podataka. Funkcije omogucavaju i parcijalno izracunavanje 
CRC koda nad vecim brojem blokova podataka. Postoje nekoliko metoda 
izracunavanja CRC koda i uvek su dostupne sledece motode:
- tabelarno izracunavanje (relativno brz algoritam, veliko zauzece ROM memorije, 
bira se u slucaju OPT_OPTIMIZE_SPEED),
- izracunavanje u petlji (relativno sporiji, malo zauzece ROM memorije, bira se 
u svim ostalim slucajevima).

Oba navedena metoda generisu identican CRC kod i baziraju se na softverskim 
algoritmima. Razlikuju se u tome sto je tabelarno izracunavanje 2-3 puta brze od 
izracunavanja u petlji po ceni od 500-600 bajta ROM memorije.

Ukoliko hardver podrzava CRC izracunavanje, onda ce hardver biti koriscen bez 
obzira na opciju za optimizaciju koda.

@section        crc_categories Kategorizacija algoritama

IME: To je ime datog algoritma. String vrednost.

Sirina: Ovo je sirina algoritma izrazena u bitima. Ovo je jedan za jedan manje 
od sirine polinoma.

Poli: Ovaj parametar je polinom. To je binarna vrednost koju treba navesti kao 
heksadecimalni broj. Zadnji bit polinoma se izostavlja. Na primer, ako je 
polinom 10110, onda treba navesti 06. Vazan aspekt ovog parametra je da
predstavlja nereflektovan polinom; donji bitovi ovog parametra su uvek LSB 
bitovi delioca bez obzira na to da li algoritam koji se modelira reflektuje.

INIT: Ovaj parametar odredjuje pocetnu vrednost registra kada pocinje algoritam. 
Ovo je vrednost koja treba da bude dodeljena u registar u algoritmu direktne 
tabele. U algoritmu tabele, mozemo razmisljati o registru koji uvek pocinje sa
vrednoscu nula, a ova vrednost se XORuj u registar posle N-bitne iteracije. Ovaj 
parametar treba da bude naveden kao heksadecimalni broj.

REFIN: Ovo je boolean parametar. Ako je vrednost FALSE, ulazni bajtovi se 
obradjuju, gde se 7 bit tretira kao MSB, a bit 0 LSB. Ako ovaj parametar ima 
vrednost TRUE, svaki bajt se reflektuje pre obrade.

REFOUT: Ovo je boolean parametar. Ako je podesen na vrednost FALSE, konacna 
vrednost u povratnom registru se direktno prosledjuje XOR out fazi, u suprotnom, 
ako ovaj parametar ima vrednost TRUE, konacna vrednost povratnog registra se 
prvo reflektuje.

XOROUT: Ova vrednost se XOR-uje sa vrednoscu iz povratnog registra.

@note Radjeno po "Rocksoft^tm Model CRC Algorithm" algoritmu.
 *//** @} *//*************************************************************************************/
