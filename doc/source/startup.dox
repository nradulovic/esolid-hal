/**************************************************************************//**
@file
@addtogroup     hal_intf
*//** @{ *//**
@defgroup       hal_startup Startup sequence
@brief          Startup sequence description
@section        hal_description Sequence description

Start-up code responsibility:
- fill entire RAM space with value: 0xDEAD
- call user uInitEarly__() function for early hw initialization.
    - Note: stack and other C structures are not set up yet.
- initialize .data section variables
- initialize .bss section variables
- calculate heap size
- call user uInitLate__() function for late hw initialization.
- call halInit() function to initialize hw managed by HAL
- call kernelInit() function to initialize Kernel data structures
- call main() function.

@par            User defined function: uInitEarly__()

Prototype:
- void uInitEarly__(void)

Details:
- Use this function to initialize hw that is needed to be initialized before the
    C setup routines are run. Please, note that C bss, data, stack and heap 
    spaces are still not functional so you must take special care not to use 
    those structures. For example, you can set up external memory controller 
    here.

@par            User defined function: uInitLate__()

Prototype:
- void uInitLate__(void)

Details:
- At this stage all C setup routines have finished. You can use this function to
initialize hw just before entering main() function.

@section        hal_startup_req Requirements 
Almost all start up scripts require the following linker defined values:
- _sram - start address of data storage RAM space
- _eram - end address of data storage RAM space
- _sdata - start address of .data section
- _edata - end address of .data section
- _sbss - start address of .bss section
- _ebss - end address of .bss section
- _sstack - start address of .stack section
- _estack - end address of .stack section
- _sheap - start address of .heap section
- _eheap - end address of .heap section
  
**//** @} *//******************************************************************/